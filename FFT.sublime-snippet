<snippet>
	<content><![CDATA[

using cd = complex<double>;
const double PI = acos(-1);

void fft(vector<cd> &p, bool flg){
	int n = p.size();
	if(n == 1)return;

	vector<cd> pe(n / 2), po(n / 2);
	for(int i = 0; i < n / 2; i++){
		pe[i] = p[2 * i];
		po[i] = p[2 * i + 1];
	}

	fft(pe, flg);
	fft(po, flg);

	double ang = (flg ? -1 : 1) * 2 * PI / n;
	cd w(1), wd(cos(ang), sin(ang));

	for(int i = 0; i * 2 < n; i++){
		p[i] = pe[i] + w * po[i];
		p[i + n / 2] = pe[i] - w * po[i];
		if(flg){
			p[i] /= 2;
			p[i + n / 2] /= 2;
		}
		w *= wd;
	}
}


vector<int> mult(vector<int> &a, vector<int> &b){
	vector<cd> fa(a.begin(), a.end()), fb(b.begin(), b.end());
	int n = 1;
	while(n < a.size() + b.size())n <<= 1;
	fa.resize(n);
	fb.resize(n);

	fft(fa, false);
	fft(fb, false);

	for(int i = 0; i < n; i++)fa[i] *= fb[i];
	fft(fa, true);

	vector<int> res(n);
	for(int i = 0; i < n; i++)res[i] = round(fa[i].real());
	return res;
}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>FFT_Fast_Fourier_Transforn</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
