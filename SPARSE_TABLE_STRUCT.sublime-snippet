<snippet>
	<content><![CDATA[
struct SPT{
	int n; 
	vector<int> v;
	vector<vector<int>> t;
	SPT(vector<int> v) : v(v){
		n = v.size() - 1; //1 Based index
		t = vector<vector<int>> (n + 1, vector<int> (18));
		build();
	}
	inline int pull(int &a, int &b){
		return min(a, b);
	}
	void build(){
    for(int i = 1; i <= n; i++)t[i][0] = v[i];
    for(int j = 1; (1 << j) <= n; j++){
      for(int i = 1; i + (1 << j) - 1 <= n; i++){
          t[i][j] = pull(t[i][j - 1], t[i + (1 << (j - 1))][j - 1]);
      }
    }
	}
	int query(int l, int r){
    int j = 31 - __builtin_clz(r - l + 1);
    return pull(t[l][j], t[r - (1 << j) + 1][j]);
	}
};


]]></content>
	<tabTrigger>SPARSE_TABLE_STRUCT</tabTrigger>
	<scope>source.c++</scope>
</snippet>

